/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Mon Jan 17 12:52:21 GMT 2011.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (TipoAnotacaoVO.as).
 */

package br.com.sicoob.capes.comum.vo.entidades {

    import br.com.bancoob.tipos.Booleano;
    import br.com.bancoob.tipos.SerializacaoObjetos;
    
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ListCollectionView;
    
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class TipoAnotacaoVOBase extends CAPESEntidadeVO {

        private var __laziness:String = null;

        private var _anotarFilial:Booleano;
        private var _ativo:Booleano;
        private var _categoriaAnotacao:CategoriaAnotacaoVO;
        private var _codTipoAnotacao:Number;
		private var _compartilhar:Booleano;
		private var _cooperativasAnotacao:ListCollectionView;
        private var _dataHoraAlteracao:Date;
        private var _dataHoraInclusao:Date;
		private var _descSaidaAnotacao:String;
        private var _descTipoAnotacao:String;
        private var _idTipoAplicacao:Number;
		private var _instituicao:InstituicaoVO;
		private var _instituicoes:ListCollectionView;
		private var _mapasTipoAnotacao:ListCollectionView;
        private var _periodicidadeAnotacao:PeriodicidadeAnotacaoVO;
        private var _registraQuantidade:Booleano;
        private var _registraValor:Booleano;
        private var _tipoCaptura:TipoCapturaVO;
		private var _tipoObservacaoAnotacao:TipoObservacaoAnotacaoVO;
        private var _usuarioAlteracao:String;
        private var _usuarioInclusao:String;
		private var _validaUsoAnotacao:Booleano;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is TipoAnotacaoVO) || (property as TipoAnotacaoVO).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set anotarFilial(value:Booleano):void {
			_anotarFilial = value;
        }
        public function get anotarFilial():Booleano {
            return _anotarFilial;
        }
		
        public function set ativo(value:Booleano):void {
            _ativo = value;
        }
        public function get ativo():Booleano {
            return _ativo;
        }

        public function set categoriaAnotacao(value:CategoriaAnotacaoVO):void {
            _categoriaAnotacao = value;
        }
        public function get categoriaAnotacao():CategoriaAnotacaoVO {
            return _categoriaAnotacao;
        }

        public function set codTipoAnotacao(value:Number):void {
            _codTipoAnotacao = value;
        }
        public function get codTipoAnotacao():Number {
            return _codTipoAnotacao;
        }
		
		public function set tipoObservacaoAnotacao(value:TipoObservacaoAnotacaoVO):void {
			_tipoObservacaoAnotacao = value;
		}
		public function get tipoObservacaoAnotacao():TipoObservacaoAnotacaoVO {
			return _tipoObservacaoAnotacao;
		}
		
		public function set compartilhar(value:Booleano):void {
			_compartilhar = value;
		}
		public function get compartilhar():Booleano {
			return _compartilhar;
		}
		
		public function get cooperativasAnotacao():ListCollectionView {
			return _cooperativasAnotacao;
		}
		
		public function set cooperativasAnotacao(valor:ListCollectionView):void {
			_cooperativasAnotacao = valor;
		}

        public function set dataHoraAlteracao(value:Date):void {
            _dataHoraAlteracao = value;
        }
        public function get dataHoraAlteracao():Date {
            return _dataHoraAlteracao;
        }

        public function set dataHoraInclusao(value:Date):void {
            _dataHoraInclusao = value;
        }
        public function get dataHoraInclusao():Date {
            return _dataHoraInclusao;
        }

		public function set descSaidaAnotacao(value:String):void {
			_descSaidaAnotacao = value;
		}
		public function get descSaidaAnotacao():String {
			return _descSaidaAnotacao;
		}		
		
        public function set descTipoAnotacao(value:String):void {
            _descTipoAnotacao = value;
        }
        public function get descTipoAnotacao():String {
            return _descTipoAnotacao;
        }

        public function set idTipoAplicacao(value:Number):void {
            _idTipoAplicacao = value;
        }
        public function get idTipoAplicacao():Number {
            return _idTipoAplicacao;
        }
		
		public function get instituicao():InstituicaoVO {
			return _instituicao;
		}
		
		public function set instituicao(valor:InstituicaoVO):void {
			_instituicao = valor;
		}
		
		public function get instituicoes():ListCollectionView {
			return _instituicoes;
		}
		
		public function set instituicoes(valor:ListCollectionView):void {
			_instituicoes = valor;
		}
		
		public function set mapasTipoAnotacao(value:ListCollectionView):void {
			_mapasTipoAnotacao = value;
		}
		public function get mapasTipoAnotacao():ListCollectionView {
			return _mapasTipoAnotacao;
		}

        public function set periodicidadeAnotacao(value:PeriodicidadeAnotacaoVO):void {
            _periodicidadeAnotacao = value;
        }
        public function get periodicidadeAnotacao():PeriodicidadeAnotacaoVO {
            return _periodicidadeAnotacao;
        }

        public function set registraQuantidade(value:Booleano):void {
            _registraQuantidade = value;
        }
        public function get registraQuantidade():Booleano {
            return _registraQuantidade;
        }

        public function set registraValor(value:Booleano):void {
            _registraValor = value;
        }
        public function get registraValor():Booleano {
            return _registraValor;
        }

        public function set tipoCaptura(value:TipoCapturaVO):void {
            _tipoCaptura = value;
        }
        public function get tipoCaptura():TipoCapturaVO {
            return _tipoCaptura;
        }

        public function set usuarioAlteracao(value:String):void {
            _usuarioAlteracao = value;
        }
        public function get usuarioAlteracao():String {
            return _usuarioAlteracao;
        }

        public function set usuarioInclusao(value:String):void {
            _usuarioInclusao = value;
        }
        public function get usuarioInclusao():String {
            return _usuarioInclusao;
        }
		
		public function set validaUsoAnotacao(value:Booleano):void {
			_validaUsoAnotacao = value;
		}
		public function get validaUsoAnotacao():Booleano {
			return _validaUsoAnotacao;
		}
		
		public function get codigoENome():String {
			return codTipoAnotacao + " - " + _descTipoAnotacao;
		}

        override public function readExternal(input:IDataInput):void {
            __laziness = input.readObject() as String;
            if (meta::isInitialized()) {
                super.readExternal(input);
				_anotarFilial = SerializacaoObjetos.lerBooleano(input);
            	_ativo = SerializacaoObjetos.lerBooleano(input);
                _categoriaAnotacao = input.readObject() as CategoriaAnotacaoVO;
                _codTipoAnotacao = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
				_compartilhar = SerializacaoObjetos.lerBooleano(input);
				_cooperativasAnotacao = input.readObject() as ListCollectionView;
            	_dataHoraAlteracao = SerializacaoObjetos.lerDate(input);
            	_dataHoraInclusao = SerializacaoObjetos.lerDate(input);
				_descSaidaAnotacao = input.readObject() as String;
                _descTipoAnotacao = input.readObject() as String;
                _idTipoAplicacao = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
				_instituicao = input.readObject() as InstituicaoVO;
				_instituicoes = input.readObject() as ListCollectionView;
				_mapasTipoAnotacao = input.readObject() as ListCollectionView;
                _periodicidadeAnotacao = input.readObject() as PeriodicidadeAnotacaoVO;
            	_registraQuantidade = SerializacaoObjetos.lerBooleano(input);
            	_registraValor = SerializacaoObjetos.lerBooleano(input);
                _tipoCaptura = input.readObject() as TipoCapturaVO;
				_tipoObservacaoAnotacao = input.readObject() as TipoObservacaoAnotacaoVO;
                _usuarioAlteracao = input.readObject() as String;
                _usuarioInclusao = input.readObject() as String;
				_validaUsoAnotacao = SerializacaoObjetos.lerBooleano(input);
            }
            else {
                _codTipoAnotacao = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            output.writeObject(__laziness);
            if (meta::isInitialized()) {
                super.writeExternal(output);
        	SerializacaoObjetos.escreverBooleano(_anotarFilial, output);
        	SerializacaoObjetos.escreverBooleano(_ativo, output);
            output.writeObject(_categoriaAnotacao);
            output.writeObject(_codTipoAnotacao);
        	SerializacaoObjetos.escreverBooleano(_compartilhar, output);
            output.writeObject(_cooperativasAnotacao);
        	SerializacaoObjetos.escreverDate(_dataHoraAlteracao, output);
        	SerializacaoObjetos.escreverDate(_dataHoraInclusao, output);
            output.writeObject(_descSaidaAnotacao);
            output.writeObject(_descTipoAnotacao);
            output.writeObject(_idTipoAplicacao);
			output.writeObject(_instituicao);
            output.writeObject(_instituicoes);
            output.writeObject(_mapasTipoAnotacao);
            output.writeObject(_periodicidadeAnotacao);
        	SerializacaoObjetos.escreverBooleano(_registraQuantidade, output);
        	SerializacaoObjetos.escreverBooleano(_registraValor, output);
            output.writeObject(_tipoCaptura);
			output.writeObject(_tipoObservacaoAnotacao);
            output.writeObject(_usuarioAlteracao);
            output.writeObject(_usuarioInclusao);
        	SerializacaoObjetos.escreverBooleano(_validaUsoAnotacao, output);
            }
            else {
                output.writeObject(_codTipoAnotacao);
            }
        }
    }
}