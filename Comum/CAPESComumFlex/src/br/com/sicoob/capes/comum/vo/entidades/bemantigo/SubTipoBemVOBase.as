/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Thu Apr 28 10:13:59 BRT 2011.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (SubTipoBemVO.as).
 */

package br.com.sicoob.capes.comum.vo.entidades.bemantigo {

    import br.com.bancoob.tipos.Booleano;
    import br.com.bancoob.tipos.SerializacaoObjetos;
    import br.com.sicoob.capes.comum.vo.entidades.CAPESEntidadeVO;
    
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ListCollectionView;
    
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class SubTipoBemVOBase extends CAPESEntidadeVO  {

        private var __laziness:String = null;

        private var _cadastraPosse:Booleano;
        private var _cadastraRegistro:Booleano;
        private var _codigo:Number;
        private var _codTipoBem:Number;
        private var _descricao:String;
        private var _tipoBem:TipoBemVO;
		private var _unidadesMedida:ListCollectionView;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is SubTipoBemVO) || (property as SubTipoBemVO).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set cadastraPosse(value:Booleano):void {
            _cadastraPosse = value;
        }
        public function get cadastraPosse():Booleano {
            return _cadastraPosse;
        }

        public function set cadastraRegistro(value:Booleano):void {
            _cadastraRegistro = value;
        }
        public function get cadastraRegistro():Booleano {
            return _cadastraRegistro;
        }

        public function set codigo(value:Number):void {
            _codigo = value;
        }
        public function get codigo():Number {
            return _codigo;
        }

        public function set codTipoBem(value:Number):void {
            _codTipoBem = value;
        }
        public function get codTipoBem():Number {
            return _codTipoBem;
        }

        public function set descricao(value:String):void {
            _descricao = value;
        }
        public function get descricao():String {
            return _descricao;
        }

        public function set tipoBem(value:TipoBemVO):void {
            _tipoBem = value;
        }
        public function get tipoBem():TipoBemVO {
            return _tipoBem;
        }
		
		public function set unidadesMedida(value:ListCollectionView):void {
			_unidadesMedida = value;
		}
		public function get unidadesMedida():ListCollectionView {
			return _unidadesMedida;
		}

        override public function readExternal(input:IDataInput):void {
            __laziness = input.readObject() as String;
            if (meta::isInitialized()) {
                super.readExternal(input);
            	_cadastraPosse = SerializacaoObjetos.lerBooleano(input);
            	_cadastraRegistro = SerializacaoObjetos.lerBooleano(input);
                _codTipoBem = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _codigo = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _descricao = input.readObject() as String;
                _tipoBem = input.readObject() as TipoBemVO;
				_unidadesMedida = input.readObject() as ListCollectionView;
            }
            else {
                _codigo = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            output.writeObject(__laziness);
            if (meta::isInitialized()) {
                super.writeExternal(output);
	        	SerializacaoObjetos.escreverBooleano(_cadastraPosse, output);
	        	SerializacaoObjetos.escreverBooleano(_cadastraRegistro, output);
	            output.writeObject(_codTipoBem);
	            output.writeObject(_codigo);
	            output.writeObject(_descricao);
	            output.writeObject(_tipoBem);
				output.writeObject(_unidadesMedida);
            }
            else {
                output.writeObject(_codigo);
            }
        }
    }
}