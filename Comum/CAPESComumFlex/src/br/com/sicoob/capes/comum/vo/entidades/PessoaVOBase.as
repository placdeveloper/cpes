/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Tue Jan 17 09:51:01 BRST 2012.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (PessoaVO.as).
 */

package br.com.sicoob.capes.comum.vo.entidades {

    import br.com.sicoob.capes.comum.enums.SituacaoCadastralRFBEnum;
    
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ListCollectionView;
    
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class PessoaVOBase extends CAPESEntidadeVO {

        private var __laziness:String = null;

        private var _compartilhamentos:ListCollectionView;
        private var _cpfCnpj:String;
        private var _idPessoa:Number;
        private var _instituicoesNegocio:ListCollectionView;
		private var _nomeRFB:String;
		private var _situacaoCadastralRFB:SituacaoCadastralRFBEnum;
		private var _tipoPessoa:TipoPessoaVO;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is PessoaVO) || (property as PessoaVO).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

		public function get situacaoCadastralRFB():SituacaoCadastralRFBEnum{
			return _situacaoCadastralRFB;
		}
		public function set situacaoCadastralRFB(value:SituacaoCadastralRFBEnum):void{
			_situacaoCadastralRFB = value;
		}
		
        public function set compartilhamentos(value:ListCollectionView):void {
            _compartilhamentos = value;
        }
        public function get compartilhamentos():ListCollectionView {
            return _compartilhamentos;
        }

        public function set cpfCnpj(value:String):void {
            _cpfCnpj = value;
        }
        public function get cpfCnpj():String {
            return _cpfCnpj;
        }

        public function set idPessoa(value:Number):void {
            _idPessoa = value;
        }
        public function get idPessoa():Number {
            return _idPessoa;
        }
        
        public function set instituicoesNegocio(value:ListCollectionView):void {
        	_instituicoesNegocio = value;
        }
        public function get instituicoesNegocio():ListCollectionView {
        	return _instituicoesNegocio;
        }

		public function get nomeRFB():String {
			return _nomeRFB;
		}
		public function set nomeRFB(value:String):void{
			_nomeRFB = value;
		}
		
        public function set tipoPessoa(value:TipoPessoaVO):void {
            _tipoPessoa = value;
        }
        public function get tipoPessoa():TipoPessoaVO {
            return _tipoPessoa;
        }

        override public function readExternal(input:IDataInput):void {
            __laziness = input.readObject() as String;
            if (meta::isInitialized()) {
                super.readExternal(input);
                _compartilhamentos = input.readObject() as ListCollectionView;
                _cpfCnpj = input.readObject() as String;
                _idPessoa = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _instituicoesNegocio = input.readObject() as ListCollectionView;
				_nomeRFB = input.readObject() as String;
				_situacaoCadastralRFB = input.readObject() as SituacaoCadastralRFBEnum;
                _tipoPessoa = input.readObject() as TipoPessoaVO;
            }
            else {
                _idPessoa = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            output.writeObject(__laziness);
            if (meta::isInitialized()) {
                super.writeExternal(output);
	            output.writeObject(_compartilhamentos);
	            output.writeObject(_cpfCnpj);
	            output.writeObject(_idPessoa);
	            output.writeObject(_instituicoesNegocio);
				output.writeObject(_nomeRFB);
				output.writeObject(_situacaoCadastralRFB);
	            output.writeObject(_tipoPessoa);
            }
            else {
                output.writeObject(_idPessoa);
            }
        }
    }
}