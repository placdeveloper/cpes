/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Wed Apr 27 11:08:21 BRT 2011.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (BemImovelBaseVO.as).
 */

package br.com.sicoob.capes.comum.vo.entidades.bemantigo {

    import br.com.sicoob.capes.comum.vo.entidades.UnidadeMedidaVO;
    
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import org.granite.meta;

    use namespace meta;

    public class BemImovelBaseVOBase extends BemVO {
		
        private var _area:Number;
        private var _benfeitoria:String;
        private var _codLocalizacao:String;
        private var _comarca:String;
        private var _denominacao:String;
        private var _idLocalidadeComarca:Number;
        private var _idLocalidadeImovel:Number;
        private var _municipio:String;
        private var _siglaUFComarca:String;
        private var _siglaUFMunicipio:String;
        private var _unidadeMedida:UnidadeMedidaVO;
        private var _valorBenfeitoria:Number;

        public function set area(value:Number):void {
            _area = value;
        }
        public function get area():Number {
            return _area;
        }

        public function set benfeitoria(value:String):void {
            _benfeitoria = value;
        }
        public function get benfeitoria():String {
            return _benfeitoria;
        }

        public function set codLocalizacao(value:String):void {
            _codLocalizacao = value;
        }
        public function get codLocalizacao():String {
            return _codLocalizacao;
        }

        public function set comarca(value:String):void {
            _comarca = value;
        }
        public function get comarca():String {
            return _comarca;
        }

        public function set denominacao(value:String):void {
            _denominacao = value;
        }
        public function get denominacao():String {
            return _denominacao;
        }

        public function set idLocalidadeComarca(value:Number):void {
            _idLocalidadeComarca = value;
        }
        public function get idLocalidadeComarca():Number {
            return _idLocalidadeComarca;
        }

        public function set idLocalidadeImovel(value:Number):void {
            _idLocalidadeImovel = value;
        }
        public function get idLocalidadeImovel():Number {
            return _idLocalidadeImovel;
        }

        public function set municipio(value:String):void {
            _municipio = value;
        }
        public function get municipio():String {
            return _municipio;
        }

        public function set siglaUFComarca(value:String):void {
            _siglaUFComarca = value;
        }
        public function get siglaUFComarca():String {
            return _siglaUFComarca;
        }

        public function set siglaUFMunicipio(value:String):void {
            _siglaUFMunicipio = value;
        }
        public function get siglaUFMunicipio():String {
            return _siglaUFMunicipio;
        }

        public function set unidadeMedida(value:UnidadeMedidaVO):void {
            _unidadeMedida = value;
        }
        public function get unidadeMedida():UnidadeMedidaVO {
            return _unidadeMedida;
        }

        public function set valorBenfeitoria(value:Number):void {
            _valorBenfeitoria = value;
        }
        public function get valorBenfeitoria():Number {
            return _valorBenfeitoria;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            
            _area = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _benfeitoria = input.readObject() as String;
            _codLocalizacao = input.readObject() as String;
            _comarca = input.readObject() as String;
            _denominacao = input.readObject() as String;
            _idLocalidadeComarca = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _idLocalidadeImovel = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _municipio = input.readObject() as String;
            _siglaUFComarca = input.readObject() as String;
            _siglaUFMunicipio = input.readObject() as String;
            _unidadeMedida = input.readObject() as UnidadeMedidaVO;
            _valorBenfeitoria = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());




//            _area = input.readObject() as Number;
//            _benfeitoria = input.readObject() as String;
//            _codLocalizacao = input.readObject() as String;
//            _comarca = input.readObject() as String;
//            super.dataHoraInicio = SerializacaoObjetos.lerDate(input);
//		    super.dataVencimentoSeguro = SerializacaoObjetos.lerDate(input);
//            _denominacao = input.readObject() as String;
//            super.descricao = input.readObject() as String;
//            super.documentoComprobatorio = input.readObject() as DocumentoComprobatorioVO;
//	    	super.emAlteracao = SerializacaoObjetos.lerBooleano(input);
//            super.gravarHistorico = SerializacaoObjetos.lerBooleano(input);
//            super.idBem = input.readObject() as Number;
//            _idLocalidadeComarca = input.readObject() as Number;
//            _idLocalidadeImovel = input.readObject() as Number;
//            super.idOcorrenciaProcesso = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());          	    	    
//            _municipio = input.readObject() as String;
//            super.nomeSeguradora = input.readObject() as String;
//            super.pessoa = input.readObject() as PessoaVO;
//            super.situacao = input.readObject() as SituacaoBemVO;
//            super.subTipo = input.readObject() as SubTipoBemVO;
//            super.valorAtualMercado = input.readObject() as Number;
//            super.valorSeguro = input.readObject() as Number;
//            _siglaUFComarca = input.readObject() as String;
//            _siglaUFMunicipio = input.readObject() as String;
//            _unidadeMedida = input.readObject() as UnidadeMedidaVO;
//            _valorBenfeitoria = input.readObject() as Number;

        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
	            output.writeObject(_area);
	            output.writeObject(_benfeitoria);
	            output.writeObject(_codLocalizacao);
	            output.writeObject(_comarca);
	            output.writeObject(_denominacao);
	            output.writeObject(_idLocalidadeComarca);
	            output.writeObject(_idLocalidadeImovel);
	            output.writeObject(_municipio);
	            output.writeObject(_siglaUFComarca);
	            output.writeObject(_siglaUFMunicipio);
	            output.writeObject(_unidadeMedida);
	            output.writeObject(_valorBenfeitoria);
            }
        }
    }
}